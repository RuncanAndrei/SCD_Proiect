{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", {\n      class: \"text-h5\"\n    }, \"My posts\", -1 /* HOISTED */)), _createVNode(_component_v_btn, {\n      text: \"load posts\",\n      onClick: $options.fetchPosts\n    }, null, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_list, null, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n        return _openBlock(), _createBlock(_component_v_list_item, {\n          class: \"postClass\",\n          variant: \"outlined\",\n          key: post.id,\n          subtitle: 'posted on ' + post.createdOn,\n          title: post.title\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(post.content), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"subtitle\", \"title\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","default","_withCtx","_createElementVNode","class","_createVNode","_component_v_btn","text","onClick","$options","fetchPosts","_component_v_list","_createElementBlock","_Fragment","_renderList","$data","posts","post","_component_v_list_item","variant","key","id","subtitle","createdOn","title","_createTextVNode","_toDisplayString","content","_"],"sources":["C:\\Users\\andre\\Desktop\\SCDproiect2-main\\socialmedia-frontend\\src\\components\\PostsView.vue"],"sourcesContent":["<template>\n  <v-container>\n    <h2 class=\"text-h5\">My posts</h2>\n    <v-btn text=\"load posts\" @click=\"fetchPosts\"></v-btn>\n    <v-list>\n      <v-list-item\n          class=\"postClass\"\n          variant=\"outlined\"\n          v-for=\"post in posts\"\n          :key=\"post.id\"\n          :subtitle=\"'posted on ' + post.createdOn\"\n          :title=\"post.title\"\n      >\n        {{post.content}}\n      </v-list-item>\n    </v-list>\n  </v-container>\n</template>\n\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'posts',\n  data() {\n    return {\n      posts: []\n    };\n  },\n  methods: {\n    async fetchPosts() {\n      try {\n        const response = await axios.get('http://localhost:8082/post');\n        this.posts = response.data;\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.postClass {\n  margin-bottom: 10px;\n}\n</style>"],"mappings":";;;;;;uBACEA,YAAA,CAecC,sBAAA;IAhBhBC,OAAA,EAAAC,QAAA,CAEI,MAAiC,C,0BAAjCC,mBAAA,CAAiC;MAA7BC,KAAK,EAAC;IAAS,GAAC,UAAQ,sBAC5BC,YAAA,CAAqDC,gBAAA;MAA9CC,IAAI,EAAC,YAAY;MAAEC,OAAK,EAAEC,QAAA,CAAAC;0CACjCL,YAAA,CAWSM,iBAAA;MAfbV,OAAA,EAAAC,QAAA,CAQU,MAAqB,E,kBAHzBU,mBAAA,CAScC,SAAA,QAdpBC,WAAA,CAQyBC,KAAA,CAAAC,KAAK,EAAbC,IAAI;6BAHflB,YAAA,CAScmB,sBAAA;UARVd,KAAK,EAAC,WAAW;UACjBe,OAAO,EAAC,UAAU;UAEjBC,GAAG,EAAEH,IAAI,CAACI,EAAE;UACZC,QAAQ,iBAAiBL,IAAI,CAACM,SAAS;UACvCC,KAAK,EAAEP,IAAI,CAACO;;UAXvBvB,OAAA,EAAAC,QAAA,CAaQ,MAAgB,CAbxBuB,gBAAA,CAAAC,gBAAA,CAaUT,IAAI,CAACU,OAAO,iB;UAbtBC,CAAA;;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}